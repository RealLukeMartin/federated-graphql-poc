directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) on SCHEMA

directive @key(
  fields: federation__FieldSet!
  resolvable: Boolean = true
) on OBJECT | INTERFACE

directive @federation__requires(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @federation__provides(
  fields: federation__FieldSet!
) on FIELD_DEFINITION

directive @federation__external(reason: String) on OBJECT | FIELD_DEFINITION

directive @federation__tag(
  name: String!
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__extends on OBJECT | INTERFACE

directive @shareable on OBJECT | FIELD_DEFINITION

directive @federation__inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @federation__override(from: String!) on FIELD_DEFINITION

type Mutation {
  createUser(input: CreateUserInputs!): User
}

type Query {
  getUser: User
  _service: _Service!
}

type Quote {
  _id: ID
  user: User
  amount: Int
}

type User {
  _id: String
  email: String
  activationCode: String
}

input CreateUserInputs {
  email: String!
  activationCode: String!
}

enum link__Purpose {
  # `SECURITY` features provide metadata necessary to securely resolve fields.
  SECURITY

  # `EXECUTION` features provide metadata necessary for operation execution.
  EXECUTION
}

scalar link__Import

scalar federation__FieldSet

scalar _Any

type _Service {
  sdl: String
}
